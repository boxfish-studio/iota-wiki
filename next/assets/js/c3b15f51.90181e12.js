"use strict";(self.webpackChunkiota_wiki=self.webpackChunkiota_wiki||[]).push([[52229],{3905:(e,n,a)=>{a.d(n,{Zo:()=>d,kt:()=>g});var t=a(67294);function i(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function r(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function o(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?r(Object(a),!0).forEach((function(n){i(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function s(e,n){if(null==e)return{};var a,t,i=function(e,n){if(null==e)return{};var a,t,i={},r=Object.keys(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||(i[a]=e[a]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var c=t.createContext({}),l=function(e){var n=t.useContext(c),a=n;return e&&(a="function"==typeof e?e(n):o(o({},n),e)),a},d=function(e){var n=l(e.components);return t.createElement(c.Provider,{value:n},e.children)},h={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},p=t.forwardRef((function(e,n){var a=e.components,i=e.mdxType,r=e.originalType,c=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=l(a),g=i,u=p["".concat(c,".").concat(g)]||p[g]||h[g]||r;return a?t.createElement(u,o(o({ref:n},d),{},{components:a})):t.createElement(u,o({ref:n},d))}));function g(e,n){var a=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=a.length,o=new Array(r);o[0]=p;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var l=2;l<r;l++)o[l]=a[l];return t.createElement.apply(null,o)}return t.createElement.apply(null,a)}p.displayName="MDXCreateElement"},94134:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>l});var t=a(87462),i=(a(67294),a(3905));const r={description:"How to manage a chain using the Grafana dashboard, a client to receive published events, logging, and validators.",image:"/img/logo/WASP_logo_dark.png",keywords:["Smart Contracts","Chain","Management","Grafana"]},o="Chain Management",s={unversionedId:"guide/chains_and_nodes/chain-management",id:"guide/chains_and_nodes/chain-management",title:"Chain Management",description:"How to manage a chain using the Grafana dashboard, a client to receive published events, logging, and validators.",source:"@site/next/external/wasp/documentation/docs/guide/chains_and_nodes/chain-management.md",sourceDirName:"guide/chains_and_nodes",slug:"/guide/chains_and_nodes/chain-management",permalink:"/next/smart-contracts/guide/chains_and_nodes/chain-management",draft:!1,editUrl:"https://github.com/iotaledger/wasp/edit/develop/documentation/next/external/wasp/documentation/docs/guide/chains_and_nodes/chain-management.md",tags:[],version:"current",frontMatter:{description:"How to manage a chain using the Grafana dashboard, a client to receive published events, logging, and validators.",image:"/img/logo/WASP_logo_dark.png",keywords:["Smart Contracts","Chain","Management","Grafana"]},sidebar:"tutorialSidebar",previous:{title:"Setting Up a Chain",permalink:"/next/smart-contracts/guide/chains_and_nodes/setting-up-a-chain"},next:{title:"Chain Rotation",permalink:"/next/smart-contracts/guide/chains_and_nodes/chain-rotation"}},c={},l=[{value:"Monitoring",id:"monitoring",level:2},{value:"Managing Chain Configuration and Validators",id:"managing-chain-configuration-and-validators",level:2},{value:"Changing Chain Ownership",id:"changing-chain-ownership",level:3},{value:"Changing Access Nodes",id:"changing-access-nodes",level:3},{value:"Changing the Set of Validators",id:"changing-the-set-of-validators",level:3}],d={toc:l};function h(e){let{components:n,...a}=e;return(0,i.kt)("wrapper",(0,t.Z)({},d,a,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"chain-management"},"Chain Management"),(0,i.kt)("h2",{id:"monitoring"},"Monitoring"),(0,i.kt)("p",null,"Each Wasp node provides a ",(0,i.kt)("a",{parentName:"p",href:"/next/smart-contracts/guide/chains_and_nodes/running-a-node#grafana"},"Grafana dashboard")," where you can visualize metrics gathered by\nthe node."),(0,i.kt)("p",null,"You can view the chain state using the ",(0,i.kt)("a",{parentName:"p",href:"/next/smart-contracts/guide/chains_and_nodes/running-a-node#dashboard"},"dashboard")," (by default on port ",(0,i.kt)("inlineCode",{parentName:"p"},":7000"),")."),(0,i.kt)("p",null,"You can also set up a client to receive ",(0,i.kt)("a",{parentName:"p",href:"/next/smart-contracts/guide/chains_and_nodes/running-a-node#publisher"},"published events")," to have insights into what's\nhappening in the system."),(0,i.kt)("p",null,"Lastly, each Wasp node will produce a log file (",(0,i.kt)("inlineCode",{parentName:"p"},"wasp.log"),") where you can investigate the behavior of a node."),(0,i.kt)("h2",{id:"managing-chain-configuration-and-validators"},"Managing Chain Configuration and Validators"),(0,i.kt)("p",null,"You can manage the chain configuration and committee of validators by interacting with\nthe ",(0,i.kt)("a",{parentName:"p",href:"/next/smart-contracts/guide/core_concepts/core_contracts/governance"},"Governance contract"),"."),(0,i.kt)("p",null,"The \u201cChain Owner\u201d is the only one who can perform administrative tasks."),(0,i.kt)("h3",{id:"changing-chain-ownership"},"Changing Chain Ownership"),(0,i.kt)("p",null,"To change the chain ownership, the current \u201cChain Owner\u201d must call ",(0,i.kt)("inlineCode",{parentName:"p"},"delegateChainOwnership")," specifying the ",(0,i.kt)("inlineCode",{parentName:"p"},"agentID")," of\nthe next owner. The next owner must call ",(0,i.kt)("inlineCode",{parentName:"p"},"claimChainOwnership")," to finalize the process."),(0,i.kt)("h3",{id:"changing-access-nodes"},"Changing Access Nodes"),(0,i.kt)("p",null,"For new access nodes to join the network, they need to:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Be added as a trusted peer to at least 1 of the existing nodes."),(0,i.kt)("li",{parentName:"ul"},"Be added by the administrator to the list of access nodes by calling ",(0,i.kt)("inlineCode",{parentName:"li"},"changeAccessNodes"),". There is a helper in\nwasp-cli to do so:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"wasp-cli chain change-access-nodes\n")),(0,i.kt)("p",null,"After this, new nodes should be able to sync the state and execute view queries (call view entry points)."),(0,i.kt)("p",null,"You can remove an access node by calling ",(0,i.kt)("inlineCode",{parentName:"p"},"changeAccessNodes"),"."),(0,i.kt)("h3",{id:"changing-the-set-of-validators"},"Changing the Set of Validators"),(0,i.kt)("p",null,"You can do this in different ways, depending on whom the\n",(0,i.kt)("a",{parentName:"p",href:"https://wiki.iota.org/introduction/develop/explanations/ledger/alias"},"governor address")," of the alias output of the\nchain is."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"If the chain governor address is the chain itself or another chain, you can perform the rotation by calling\n",(0,i.kt)("inlineCode",{parentName:"li"},"rotateStateController")," after adding the next state controller via ",(0,i.kt)("inlineCode",{parentName:"li"},"addAllowedStateControllerAddress"),"."),(0,i.kt)("li",{parentName:"ul"},"If the chain governor address is a regular user wallet, you can issue the rotation transaction using wasp-cli:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"wasp-cli chain rotate <new controller address>\n")))}h.isMDXComponent=!0}}]);