"use strict";(self.webpackChunkiota_wiki=self.webpackChunkiota_wiki||[]).push([[68710],{23777:(e,n,t)=>{t.d(n,{ZP:()=>s});var a=t(87462),o=(t(67294),t(3905));const i={toc:[]};function s(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,a.Z)({},i,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("admonition",{title:"Dotenv",type:"warning"},(0,o.kt)("p",{parentName:"admonition"},"This example uses dotenv, which is not safe to use in production environments.")))}s.isMDXComponent=!0},31585:(e,n,t)=>{t.d(n,{ZP:()=>s});var a=t(87462),o=(t(67294),t(3905));const i={toc:[]};function s(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,a.Z)({},i,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("admonition",{title:"Guide Coming Soon",type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"This how to guide is not available in your language of choice at the moment.\nPlease feel free to browse ",(0,o.kt)("a",{parentName:"p",href:"/next/iota.rs/how_tos/more_examples"},"more examples")," which may suit your requirements.")))}s.isMDXComponent=!0},84170:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>y,contentTitle:()=>v,default:()=>_,frontMatter:()=>h,metadata:()=>T,toc:()=>g});var a=t(87462),o=(t(67294),t(3905)),i=t(34259),s=t(18679),d=t(31585),c=t(69319);var r=t(23777);const l={toc:[]};function u(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,a.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)(r.ZP,{mdxType:"DotEnvWarning"}),(0,o.kt)(c.Z,{className:"language-typescript",mdxType:"CodeBlock"},"// Copyright 2021-2022 IOTA Stiftung\n// SPDX-License-Identifier: Apache-2.0\nimport { Client, initLogger } from '@iota/client';\nrequire('dotenv').config({ path: '../.env' });\n\n// Run with command:\n// node ./dist/10_mqtt.js\n\n// Initialize MQTT listener\nasync function run() {\n    initLogger();\n    if (!process.env.NODE_URL) {\n        throw new Error('.env NODE_URL is undefined, see .env.example');\n    }\n\n    // Connecting to a MQTT broker using raw ip doesn't work with TCP. This is a limitation of rustls.\n    const client = new Client({\n        nodes: [process.env.NODE_URL],\n    });\n\n    // Array of topics to subscribe to\n    // Topics can be found here https://studio.asyncapi.com/?url=https://raw.githubusercontent.com/iotaledger/tips/stardust-event-api/tips/TIP-0028/event-api.yml\n    const topics = ['blocks'];\n\n    const callback = function (error: Error, data: string) {\n        console.log(JSON.parse(data));\n    };\n\n    client.listen(topics, callback);\n}\n\nrun();\n"),(0,o.kt)("p",null,"You can run the example by running the following command from the ",(0,o.kt)("inlineCode",{parentName:"p"},"bindings/node/examples/")," folder:"),(0,o.kt)(c.Z,{className:"language-bash",mdxType:"CodeBlock"},"node dist/10_mqtt.ts"))}u.isMDXComponent=!0;const p={toc:[]};function m(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  topic: \'blocks\',\n  payload: {\n    "protocolVersion": 2,\n    "parents": [\n      "0x7298db112c825c949ae399b26fa01e6147e916c1dcaff2a2fc487f3beca37f3e",\n      "0x7d052b5938882ed514a8419f0daaa567e029fd26bb8384a782fadc73bf4197e1",\n      "0xb732a27feb1817bee363efdeb88fa4d3c7ff3ebf44ff72f2e3decc6bf26bfc6e",\n      "0xc24af5a4ebdbd4e5be7b0858ca5d3b3333d482c336cd4df3a69a487df31039c6"\n    ],\n    "payload": {\n      "type": 5,\n      "tag": "0x484f524e4554205370616d6d6572",\n      "data": "0x57652061726520616c6c206d616465206f662073746172647573742e0a436f756e743a20353339323036340a54696d657374616d703a20323032322d30392d30325431333a34383a31375a0a54697073656c656374696f6e3a20393131c2b573"\n    },\n    "nonce": "187545"\n  }\n},\n[\n  ...\n]\n')))}m.isMDXComponent=!0;const f={toc:[{value:"Run the Example",id:"run-the-example",level:3}]};function b(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,a.Z)({},f,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)(r.ZP,{mdxType:"DotEnvWarning"}),(0,o.kt)(c.Z,{className:"language-typescript",mdxType:"CodeBlock"},'// Copyright 2021 IOTA Stiftung\n// SPDX-License-Identifier: Apache-2.0\n\n//! cargo run --example 07_mqtt --features=mqtt --release\n\nuse std::sync::{mpsc::channel, Arc, Mutex};\n\nuse iota_client::{Client, MqttEvent, MqttPayload, Result, Topic};\n\n// Connecting to a MQTT broker using raw ip doesn\'t work with TCP. This is a limitation of rustls.\n#[tokio::main]\nasync fn main() -> Result<()> {\n    // Create a client instance\n    let mut client = Client::builder()\n        .with_node("https://api.testnet.shimmer.network")?\n        // .with_mqtt_broker_options(BrokerOptions::new().use_ws(false))\n        .finish()?;\n\n    let (tx, rx) = channel();\n    let tx = Arc::new(Mutex::new(tx));\n\n    let mut event_rx = client.mqtt_event_receiver();\n    tokio::spawn(async move {\n        while event_rx.changed().await.is_ok() {\n            let event = event_rx.borrow();\n            if *event == MqttEvent::Disconnected {\n                println!("mqtt disconnected");\n                std::process::exit(1);\n            }\n        }\n    });\n\n    client\n        .subscribe(\n            vec![\n                Topic::try_from("milestone-info/latest".to_string())?,\n                Topic::try_from("blocks".to_string())?,\n                Topic::try_from(\n                    "outputs/unlock/address/atoi1qzt0nhsf38nh6rs4p6zs5knqp6psgha9wsv74uajqgjmwc75ugupx3y7x0r"\n                        .to_string(),\n                )?,\n            ],\n            move |event| {\n                println!("Topic: {}", event.topic);\n                match &event.payload {\n                    MqttPayload::Json(val) => println!("{}", serde_json::to_string(&val).unwrap()),\n                    MqttPayload::Block(block) => println!("{:?}", block),\n                    MqttPayload::MilestonePayload(ms) => println!("{:?}", ms),\n                    MqttPayload::Receipt(receipt) => println!("{:?}", receipt),\n                }\n                tx.lock().unwrap().send(()).unwrap();\n            },\n        )\n        .await?;\n\n    for i in 0..10 {\n        rx.recv().unwrap();\n        if i == 7 {\n            // unsubscribe from topic "blocks", will continue to receive events for "milestones/latest"\n            client.unsubscribe(vec![Topic::try_from("blocks".to_string())?]).await?;\n        }\n    }\n\n    client.subscriber().disconnect().await?;\n    // alternatively\n    // client.subscriber().unsubscribe().await?;\n    Ok(())\n}\n'),(0,o.kt)("h3",{id:"run-the-example"},"Run the Example"),(0,o.kt)("p",null,"Run the example by running the following command:"),(0,o.kt)(c.Z,{className:"language-bash",mdxType:"CodeBlock"},"cargo run --example 07_mqtt --features=mqtt --release"))}b.isMDXComponent=!0;const x={toc:[]};function k(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,a.Z)({},x,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'Topic: blocksBlock{\n  protocol_version: 2,\n  parents: Parents(BoxedSlicePrefix([\n    BlockId(0x2c6217376977980929b5bd9f4fd33ee06a13dc5ed41a53ffa0d20eae77a0d3d9),\n    BlockId(0x3971dc26622ffef0d1cf5b6d2cbfa0732014dd3271d675158bf854100087475c),\n    BlockId(0x5bb64f36721d02b5ef314fd0a012ef1adf779592474dac88dd24d82550bf5242),\n    BlockId(0xc95cfe61e184ef1885a29f7832019840d999fa4baf452f6dbb127e2dc4c1d20f)\n  ])),\n  payload: OptionalPayload(Some(Transaction(TransactionPayload{\n    essence: Regular(RegularTransactionEssence{\n      network_id: 8342982141227064571,\n      inputs: BoxedSlicePrefix([\n        Utxo(UtxoInput(0x8e7b59a567f0f439ef7d3b01de094ce2f81aa8e68e09f26705dfd1d39ddf471b0000)),\n        Utxo(UtxoInput(0x60e8afa096f3705b6f1a694f5496d51721ea4b4e9876b219dfecdf99586949fd0100)),\n        Utxo(UtxoInput(0xf12c189790488ec61ce8c4d9d28ebbb7e82d322b25ec293e40fd4ef2dfe15e0d0000)),\n        Utxo(UtxoInput(0xd14bd0777e8ea7266a2af955126dde56ed692d9ad6b19508cfd614d4b3612a950000)),\n        Utxo(UtxoInput(0xf31d1bf2c93ff0578d72951471c0fda2be4efd4cfbb7a2bd03e04d64362ef6401b00)),\n        Utxo(UtxoInput(0xf34edd2df152ef473679ad468d6f942fadeca7004499576bba9a1a17927da3af7700))\n      ]),\n      inputs_commitment: InputsCommitment(0x43448b345d2c0bc38ea6e4abd79726852a2880528a753a986deb13bf3f93af5b),\n      outputs: BoxedSlicePrefix([\n        Nft(NftOutput{\n          amount: BoundedU64(51000),\n          native_tokens: NativeTokens(BoxedSlicePrefix([\n            \n          ])),\n          nft_id: NftId(0x0000000000000000000000000000000000000000000000000000000000000000),\n          unlock_conditions: UnlockConditions(BoxedSlicePrefix([\n            Address(AddressUnlockCondition(Ed25519(Ed25519Address(0x56b1638c1bb2566e2150d4667f78a59ee0d9b9a6c1e6af4499c3d55c8fd77e01))))\n          ])),\n          features: Features(BoxedSlicePrefix([\n            \n          ])),\n          immutable_features: Features(BoxedSlicePrefix([\n            Issuer(IssuerFeature(Ed25519(Ed25519Address(0x56b1638c1bb2566e2150d4667f78a59ee0d9b9a6c1e6af4499c3d55c8fd77e01)))),\n            Metadata(MetadataFeature(0x736f6d652d697066732d6c696e6b))\n          ]))\n        }),\n        Basic(BasicOutput{\n          amount: BoundedU64(1009003400),\n          native_tokens: NativeTokens(BoxedSlicePrefix([\n            \n          ])),\n          unlock_conditions: UnlockConditions(BoxedSlicePrefix([\n            Address(AddressUnlockCondition(Ed25519(Ed25519Address(0x56b1638c1bb2566e2150d4667f78a59ee0d9b9a6c1e6af4499c3d55c8fd77e01))))\n          ])),\n          features: Features(BoxedSlicePrefix([\n            \n          ]))\n        })\n      ]),\n      payload: OptionalPayload(Some(TaggedData(TaggedDataPayload{\n        tag: "0x484f524e4554205370616d6d65722053656d692d4c617a79",\n        data: "0x57652061726520616c6c206d616465206f662073746172647573742e0a436f756e743a203032353636380a54696d657374616d703a20323032322d30392d30325431343a30353a33355a0a54697073656c656374696f6e3a20313836c2b573"\n      })))\n    }),\n    unlocks: Unlocks(BoxedSlicePrefix([\n      Signature(SignatureUnlock(Ed25519(Ed25519Signature{\n        public_key: 0x1eea893bc9fc06787b7e5d273cdb02e02f9a5cce9eb4e1dc513eec14e8d95047,\n        signature: 0xbaab2fd45c038a0661f896184aecd249c8169b4b08dda8965d7d99e3778828cbe69c95a6893115d83705887d20f85eef4d3f9d2d39e89d009649da66fdfffa0a\n      }))),\n      Reference(ReferenceUnlock(BoundedU16(0))),\n      Reference(ReferenceUnlock(BoundedU16(0))),\n      Reference(ReferenceUnlock(BoundedU16(0))),\n      Reference(ReferenceUnlock(BoundedU16(0))),\n      Reference(ReferenceUnlock(BoundedU16(0)))\n    ]))\n  }))),\n  nonce: 1785168781326745297\n}\nTopic: milestone-info/latest{\n  "index": 798690,\n  "milestoneId": "0xc405fa4839b32d78b1a7f27e297d07842aa83a8ced1e5b556e446317c7348be6",\n  "timestamp": 1662127539\n}\n[...]\n')))}k.isMDXComponent=!0;const h={title:"Listen to MQTT",description:"You can listen to MQTT topics by connecting to a node and using the `Client.subscribe()` function.",keywords:["how to","subscribe topic","unsubscribe topic","MQTT","listen MQTT","java","nodejs","python","rust"]},v=void 0,T={unversionedId:"how_tos/mqtt",id:"how_tos/mqtt",title:"Listen to MQTT",description:"You can listen to MQTT topics by connecting to a node and using the `Client.subscribe()` function.",source:"@site/next/external/iota.rs/documentation/docs/how_tos/14_mqtt.mdx",sourceDirName:"how_tos",slug:"/how_tos/mqtt",permalink:"/next/iota.rs/how_tos/mqtt",draft:!1,editUrl:"https://github.com/iotaledger/iota.rs/edit/develop/documentation/next/external/iota.rs/documentation/docs/how_tos/14_mqtt.mdx",tags:[],version:"current",sidebarPosition:14,frontMatter:{title:"Listen to MQTT",description:"You can listen to MQTT topics by connecting to a node and using the `Client.subscribe()` function.",keywords:["how to","subscribe topic","unsubscribe topic","MQTT","listen MQTT","java","nodejs","python","rust"]},sidebar:"docs",previous:{title:"Build an Alias Output",permalink:"/next/iota.rs/how_tos/build_alias_output"},next:{title:"More examples",permalink:"/next/iota.rs/how_tos/more_examples"}},y={},g=[{value:"Code Example",id:"code-example",level:2},{value:"Expected Output",id:"expected-output",level:2}],w={toc:g};function _(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,a.Z)({},w,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The following code example will:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Create a ",(0,o.kt)("inlineCode",{parentName:"li"},"Client")," which will connect to the ",(0,o.kt)("a",{parentName:"li",href:"https://api.testnet.shimmer.network"},"Shimmer Testnet"),"."),(0,o.kt)("li",{parentName:"ol"},"Subscribe to a set of ",(0,o.kt)("inlineCode",{parentName:"li"},"topics"),"."),(0,o.kt)("li",{parentName:"ol"},"Listen to the topic defined in step 2 and log the output.")),(0,o.kt)("h2",{id:"code-example"},"Code Example"),(0,o.kt)(i.Z,{groupId:"language",mdxType:"Tabs"},(0,o.kt)(s.Z,{value:"rust",label:"Rust",mdxType:"TabItem"},(0,o.kt)(b,{mdxType:"RustCode"})),(0,o.kt)(s.Z,{value:"nodejs",label:"Nodejs",mdxType:"TabItem"},(0,o.kt)(u,{mdxType:"NodejsCode"})),(0,o.kt)(s.Z,{value:"python",label:"Python",mdxType:"TabItem"},(0,o.kt)(d.ZP,{mdxType:"PythonCode"})),(0,o.kt)(s.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,o.kt)(d.ZP,{mdxType:"JavaCode"}))),(0,o.kt)("h2",{id:"expected-output"},"Expected Output"),(0,o.kt)(i.Z,{groupId:"language",mdxType:"Tabs"},(0,o.kt)(s.Z,{value:"rust",label:"Rust",mdxType:"TabItem"},(0,o.kt)(k,{mdxType:"RustOutput"})),(0,o.kt)(s.Z,{value:"nodejs",label:"Nodejs",mdxType:"TabItem"},(0,o.kt)(m,{mdxType:"NodejsOutput"})),(0,o.kt)(s.Z,{value:"python",label:"Python",mdxType:"TabItem"},(0,o.kt)(d.ZP,{mdxType:"PythonOutput"})),(0,o.kt)(s.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,o.kt)(d.ZP,{mdxType:"JavaOutput"}))))}_.isMDXComponent=!0},18679:(e,n,t)=>{t.d(n,{Z:()=>s});var a=t(67294),o=t(86010);const i="tabItem_Ymn6";function s(e){let{children:n,hidden:t,className:s}=e;return a.createElement("div",{role:"tabpanel",className:(0,o.Z)(i,s),hidden:t},n)}},34259:(e,n,t)=>{t.d(n,{Z:()=>m});var a=t(87462),o=t(67294),i=t(86010),s=t(51048),d=t(33609),c=t(1943),r=t(72957);const l="tabList__CuJ",u="tabItem_LNqP";function p(e){var n;const{lazy:t,block:s,defaultValue:p,values:m,groupId:f,className:b}=e,x=o.Children.map(e.children,(e=>{if((0,o.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),k=m??x.map((e=>{let{props:{value:n,label:t,attributes:a}}=e;return{value:n,label:t,attributes:a}})),h=(0,d.l)(k,((e,n)=>e.value===n.value));if(h.length>0)throw new Error(`Docusaurus error: Duplicate values "${h.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const v=null===p?p:p??(null==(n=x.find((e=>e.props.default)))?void 0:n.props.value)??x[0].props.value;if(null!==v&&!k.some((e=>e.value===v)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${v}" but none of its children has the corresponding value. Available values are: ${k.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:T,setTabGroupChoices:y}=(0,c.U)(),[g,w]=(0,o.useState)(v),_=[],{blockElementScrollPositionUntilNextRender:C}=(0,r.o5)();if(null!=f){const e=T[f];null!=e&&e!==g&&k.some((n=>n.value===e))&&w(e)}const N=e=>{const n=e.currentTarget,t=_.indexOf(n),a=k[t].value;a!==g&&(C(n),w(a),null!=f&&y(f,String(a)))},P=e=>{var n;let t=null;switch(e.key){case"ArrowRight":{const n=_.indexOf(e.currentTarget)+1;t=_[n]??_[0];break}case"ArrowLeft":{const n=_.indexOf(e.currentTarget)-1;t=_[n]??_[_.length-1];break}}null==(n=t)||n.focus()};return o.createElement("div",{className:(0,i.Z)("tabs-container",l)},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":s},b)},k.map((e=>{let{value:n,label:t,attributes:s}=e;return o.createElement("li",(0,a.Z)({role:"tab",tabIndex:g===n?0:-1,"aria-selected":g===n,key:n,ref:e=>_.push(e),onKeyDown:P,onFocus:N,onClick:N},s,{className:(0,i.Z)("tabs__item",u,null==s?void 0:s.className,{"tabs__item--active":g===n})}),t??n)}))),t?(0,o.cloneElement)(x.filter((e=>e.props.value===g))[0],{className:"margin-top--md"}):o.createElement("div",{className:"margin-top--md"},x.map(((e,n)=>(0,o.cloneElement)(e,{key:n,hidden:e.props.value!==g})))))}function m(e){const n=(0,s.Z)();return o.createElement(p,(0,a.Z)({key:String(n)},e))}}}]);