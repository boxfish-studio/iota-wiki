"use strict";(self.webpackChunkiota_wiki=self.webpackChunkiota_wiki||[]).push([[6722],{3905:(t,e,n)=>{n.d(e,{Zo:()=>c,kt:()=>m});var r=n(67294);function i(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function a(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?a(Object(n),!0).forEach((function(e){i(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function l(t,e){if(null==t)return{};var n,r,i=function(t,e){if(null==t)return{};var n,r,i={},a=Object.keys(t);for(r=0;r<a.length;r++)n=a[r],e.indexOf(n)>=0||(i[n]=t[n]);return i}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(r=0;r<a.length;r++)n=a[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(i[n]=t[n])}return i}var s=r.createContext({}),u=function(t){var e=r.useContext(s),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},c=function(t){var e=u(t.components);return r.createElement(s.Provider,{value:e},t.children)},d={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},p=r.forwardRef((function(t,e){var n=t.components,i=t.mdxType,a=t.originalType,s=t.parentName,c=l(t,["components","mdxType","originalType","parentName"]),p=u(n),m=i,g=p["".concat(s,".").concat(m)]||p[m]||d[m]||a;return n?r.createElement(g,o(o({ref:e},c),{},{components:n})):r.createElement(g,o({ref:e},c))}));function m(t,e){var n=arguments,i=e&&e.mdxType;if("string"==typeof t||i){var a=n.length,o=new Array(a);o[0]=p;var l={};for(var s in e)hasOwnProperty.call(e,s)&&(l[s]=e[s]);l.originalType=t,l.mdxType="string"==typeof t?t:i,o[1]=l;for(var u=2;u<a;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},99817:(t,e,n)=>{n.d(e,{ZP:()=>o});var r=n(87462),i=(n(67294),n(3905));const a={toc:[]};function o(t){let{components:e,...n}=t;return(0,i.kt)("wrapper",(0,r.Z)({},a,n,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("admonition",{title:"Password Storage",type:"warning"},(0,i.kt)("p",{parentName:"admonition"},"Never store passwords or seeds on a host's environment variables or in the source code in a production\nsetup. Please follow our ",(0,i.kt)("a",{parentName:"p",href:"https://wiki.iota.org/introduction/guides/backup_security"},"backup and security"),"\nrecommendations for production use.")))}o.isMDXComponent=!0},9183:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>u,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var r=n(87462),i=(n(67294),n(3905)),a=n(99817);const o={title:"Getting Started With Rust",description:"Getting started with the official IOTA Client Rust library.",image:"/img/logo/iota_mark_light.png",keywords:["Rust","install","cargo","system environment variables"]},l=void 0,s={unversionedId:"getting_started/rust",id:"getting_started/rust",title:"Getting Started With Rust",description:"Getting started with the official IOTA Client Rust library.",source:"@site/next/external/iota.rs/documentation/docs/getting_started/rust.mdx",sourceDirName:"getting_started",slug:"/getting_started/rust",permalink:"/next/iota.rs/getting_started/rust",draft:!1,editUrl:"https://github.com/iotaledger/iota.rs/edit/develop/documentation/next/external/iota.rs/documentation/docs/getting_started/rust.mdx",tags:[],version:"current",frontMatter:{title:"Getting Started With Rust",description:"Getting started with the official IOTA Client Rust library.",image:"/img/logo/iota_mark_light.png",keywords:["Rust","install","cargo","system environment variables"]},sidebar:"docs",previous:{title:"Getting Started with Python",permalink:"/next/iota.rs/getting_started/python"},next:{title:"Run Code Examples",permalink:"/next/iota.rs/how_tos/run_how_tos"}},u={},c=[{value:"Security",id:"security",level:2},{value:"Requirements",id:"requirements",level:2},{value:"Include the Library in Your <code>Cargo.toml</code>",id:"include-the-library-in-your-cargotoml",level:2},{value:"Use the Library",id:"use-the-library",level:2},{value:"What&#39;s Next?",id:"whats-next",level:2}],d={toc:c};function p(t){let{components:e,...n}=t;return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"security"},"Security"),(0,i.kt)(a.ZP,{mdxType:"WarningPasswordStorage"}),(0,i.kt)("h2",{id:"requirements"},"Requirements"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://doc.rust-lang.org/cargo/getting-started/installation.html"},"Rust and Cargo"),"."),(0,i.kt)("li",{parentName:"ul"},"(for Linux only) ",(0,i.kt)("inlineCode",{parentName:"li"},"libudev"),". You can install it with ",(0,i.kt)("inlineCode",{parentName:"li"},"apt install libudev-dev"),".")),(0,i.kt)("h2",{id:"include-the-library-in-your-cargotoml"},"Include the Library in Your ",(0,i.kt)("inlineCode",{parentName:"h2"},"Cargo.toml")),(0,i.kt)("p",null,"The only thing you need to do to start using the library is to add it as dependency in your ",(0,i.kt)("inlineCode",{parentName:"p"},"Cargo.toml")," file:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'[dependencies]\niota-client = { git = "https://github.com/iotaledger/iota.rs", branch = "develop" }\ntokio = { version = "1.22.0", features = [ "full" ] }\n')),(0,i.kt)("h2",{id:"use-the-library"},"Use the Library"),(0,i.kt)("p",null,"This example fetches node information."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-rust"},'use iota_client::{Client, Result};\n\n#[tokio::main]\nasync fn main() -> Result<()> {\n    // Create a client with that node.\n    let client = Client::builder()\n        .with_node("https://api.testnet.shimmer.network")?\n        .with_ignore_node_health()\n        .finish()?;\n\n    // Get node info.\n    let info = client.get_info().await?;\n\n    // Print node info.\n    println!("{info:#?}");\n\n    Ok(())\n}\n')),(0,i.kt)("h2",{id:"whats-next"},"What's Next?"),(0,i.kt)("p",null,"Now that you are up and running, you can get acquainted with the library using\nits ",(0,i.kt)("a",{parentName:"p",href:"/next/iota.rs/how_tos/run_how_tos"},"how-to guides")," and the\nrepository's ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/iotaledger/iota.rs/tree/develop/examples"},"code examples"),"."))}p.isMDXComponent=!0}}]);