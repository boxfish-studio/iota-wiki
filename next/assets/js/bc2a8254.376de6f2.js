"use strict";(self.webpackChunkiota_wiki=self.webpackChunkiota_wiki||[]).push([[65359],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>h});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),l=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},c=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=l(r),h=o,d=u["".concat(s,".").concat(h)]||u[h]||m[h]||i;return r?n.createElement(d,a(a({ref:t},c),{},{components:r})):n.createElement(d,a({ref:t},c))}));function h(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=u;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p.mdxType="string"==typeof e?e:o,a[1]=p;for(var l=2;l<i;l++)a[l]=r[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},97313:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>m,frontMatter:()=>i,metadata:()=>p,toc:()=>l});var n=r(87462),o=(r(67294),r(3905));const i={description:"The IOTA foundation provides load-balanced public Shimmer endpoints where MQTT and the HTTP REST API are enabled.",image:"/img/logo/preview.png",keywords:["shimmer","MQTT","REST API","HTTP","Explorer","reference"]},a="Shimmer",p={unversionedId:"reference/networks/shimmer",id:"reference/networks/shimmer",title:"Shimmer",description:"The IOTA foundation provides load-balanced public Shimmer endpoints where MQTT and the HTTP REST API are enabled.",source:"@site/next/external/introduction-docs/docs/reference/networks/shimmer.md",sourceDirName:"reference/networks",slug:"/reference/networks/shimmer",permalink:"/next/introduction/reference/networks/shimmer",draft:!1,editUrl:"https://github.com/iotaledger/chrysalis-docs/edit/develop/docs/next/external/introduction-docs/docs/reference/networks/shimmer.md",tags:[],version:"current",frontMatter:{description:"The IOTA foundation provides load-balanced public Shimmer endpoints where MQTT and the HTTP REST API are enabled.",image:"/img/logo/preview.png",keywords:["shimmer","MQTT","REST API","HTTP","Explorer","reference"]},sidebar:"mySidebar",previous:{title:"Shimmer Beta",permalink:"/next/introduction/reference/networks/betanet"},next:{title:"Resources",permalink:"/next/introduction/resources"}},s={},l=[{value:"Public Infrastructure",id:"public-infrastructure",level:2},{value:"Developer Tools",id:"developer-tools",level:2}],c={toc:l};function m(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"shimmer"},"Shimmer"),(0,o.kt)("h2",{id:"public-infrastructure"},"Public Infrastructure"),(0,o.kt)("p",null,"The IOTA Foundation currently provides these public load-balanced Shimmer endpoints:"),(0,o.kt)("p",null,"Node API: ",(0,o.kt)("a",{parentName:"p",href:"https://api.shimmer.network"},"https://api.shimmer.network"),"\nExample info endpoint: ",(0,o.kt)("a",{parentName:"p",href:"https://api.shimmer.network/api/core/v2/info"},"https://api.shimmer.network/api/core/v2/info"),"\nAvailable routes: ",(0,o.kt)("a",{parentName:"p",href:"https://api.shimmer.network/api/routes"},"https://api.shimmer.network/api/routes"),"\nHealth endpoint: ",(0,o.kt)("a",{parentName:"p",href:"https://api.shimmer.network/health"},"https://api.shimmer.network/health"),"\nMQTT: wss://api.shimmer.network:443/api/mqtt/v1\nChronicle API: ",(0,o.kt)("a",{parentName:"p",href:"https://chronicle.shimmer.network"},"https://chronicle.shimmer.network")),(0,o.kt)("p",null,"These endpoints have MQTT (via WebSockets) exposed and offer the HTTP REST API (according to the specifications ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/iotaledger/tips/blob/main/tips/TIP-0025/tip-0025.md"},"TIP-25"),", ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/iotaledger/tips/blob/main/tips/TIP-0026/tip-0026.md"},"TIP-26")," and ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/iotaledger/tips/blob/main/tips/TIP-0028/tip-0028.md"},"TIP-28"),") over TLS"),(0,o.kt)("h2",{id:"developer-tools"},"Developer Tools"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://explorer.shimmer.network"},"Explorer"),".")))}m.isMDXComponent=!0}}]);