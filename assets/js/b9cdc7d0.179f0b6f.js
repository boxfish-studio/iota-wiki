"use strict";(self.webpackChunkiota_wiki=self.webpackChunkiota_wiki||[]).push([[24717],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>g});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var o=r.createContext({}),d=function(e){var t=r.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=d(e.components);return r.createElement(o.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,o=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=d(a),g=n,c=m["".concat(o,".").concat(g)]||m[g]||u[g]||l;return a?r.createElement(c,i(i({ref:t},p),{},{components:a})):r.createElement(c,i({ref:t},p))}));function g(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,i=new Array(l);i[0]=m;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:n,i[1]=s;for(var d=2;d<l;d++)i[d]=a[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},82464:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>d});var r=a(87462),n=(a(67294),a(3905));const l={},i=void 0,s={unversionedId:"libraries/java/api/MessageBuilder",id:"libraries/java/api/MessageBuilder",title:"MessageBuilder",description:"A builder to build a Message.",source:"@site/iota/external/iota.rs/production/documentation/docs/libraries/java/api/MessageBuilder.mdx",sourceDirName:"libraries/java/api",slug:"/libraries/java/api/MessageBuilder",permalink:"/iota.rs/libraries/java/api/MessageBuilder",draft:!1,editUrl:"https://github.com/iotaledger/iota.rs/edit/production/documentation/iota/external/iota.rs/production/documentation/docs/libraries/java/api/MessageBuilder.mdx",tags:[],version:"current",frontMatter:{}},o={},d=[{value:"MessageBuilder(): MessageBuilder",id:"messagebuilder-messagebuilder",level:3},{value:"networkId(network_id): MessageBuilder",id:"networkidnetwork_id-messagebuilder",level:3},{value:"parents(parents): MessageBuilder",id:"parentsparents-messagebuilder",level:3},{value:"payload(payload): MessageBuilder",id:"payloadpayload-messagebuilder",level:3},{value:"nonceProvider(provider, target_score): MessageBuilder",id:"nonceproviderprovider-target_score-messagebuilder",level:3},{value:"finish(): Message",id:"finish-message",level:3}],p={toc:d};function u(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"A builder to build a ",(0,n.kt)("inlineCode",{parentName:"p"},"Message"),"."),(0,n.kt)("h3",{id:"messagebuilder-messagebuilder"},"MessageBuilder(): ",(0,n.kt)("a",{parentName:"h3",href:"#messagebuilder"},"MessageBuilder")),(0,n.kt)("p",null,"Creates a new ",(0,n.kt)("inlineCode",{parentName:"p"},"MessageBuilder"),"."),(0,n.kt)("h3",{id:"networkidnetwork_id-messagebuilder"},"networkId(network_id): ",(0,n.kt)("a",{parentName:"h3",href:"#messagebuilder"},"MessageBuilder")),(0,n.kt)("p",null,"Adds a network id to a ",(0,n.kt)("inlineCode",{parentName:"p"},"MessageBuilder"),"."),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"network_id"),(0,n.kt)("td",{parentName:"tr",align:null},"long"),(0,n.kt)("td",{parentName:"tr",align:null},"The network id")))),(0,n.kt)("h3",{id:"parentsparents-messagebuilder"},"parents(parents): ",(0,n.kt)("a",{parentName:"h3",href:"#messagebuilder"},"MessageBuilder")),(0,n.kt)("p",null,"Adds parents to a ",(0,n.kt)("inlineCode",{parentName:"p"},"MessageBuilder"),"."),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"parents"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"#messageid"},"MessageId[]")),(0,n.kt)("td",{parentName:"tr",align:null},"A list of parents to set")))),(0,n.kt)("h3",{id:"payloadpayload-messagebuilder"},"payload(payload): ",(0,n.kt)("a",{parentName:"h3",href:"#messagebuilder"},"MessageBuilder")),(0,n.kt)("p",null,"Adds a payload to a ",(0,n.kt)("inlineCode",{parentName:"p"},"MessageBuilder"),"."),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"payload"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"#messagepayload"},"MessagePayload")),(0,n.kt)("td",{parentName:"tr",align:null},"the MessagePayload to set")))),(0,n.kt)("h3",{id:"nonceproviderprovider-target_score-messagebuilder"},"nonceProvider(provider, target_score): ",(0,n.kt)("a",{parentName:"h3",href:"#messagebuilder"},"MessageBuilder")),(0,n.kt)("p",null,"Sets a provider for the nonce. Can currently only be obtained from Client.getPowProvider"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"provider"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"#clientminer"},"ClientMiner")),(0,n.kt)("td",{parentName:"tr",align:null},"Sets the nonce provider")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"target_score"),(0,n.kt)("td",{parentName:"tr",align:null},"double"),(0,n.kt)("td",{parentName:"tr",align:null},"Target score for the nonce, Recommended: 4000")))),(0,n.kt)("h3",{id:"finish-message"},"finish(): ",(0,n.kt)("a",{parentName:"h3",href:"#message"},"Message")),(0,n.kt)("p",null,"Finish the MessageBuilder"))}u.isMDXComponent=!0}}]);