"use strict";(self.webpackChunkiota_wiki=self.webpackChunkiota_wiki||[]).push([[37811],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=c(n),m=i,g=u["".concat(l,".").concat(m)]||u[m]||p[m]||r;return n?a.createElement(g,o(o({ref:t},d),{},{components:n})):a.createElement(g,o({ref:t},d))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var c=2;c<r;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},84001:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>m,frontMatter:()=>s,metadata:()=>c,toc:()=>p});var a=n(87462),i=(n(67294),n(3905)),r=n(34259),o=n(18679);const s={image:"/img/logo/integration_services.png",description:"The Integration Services SDK makes it easy to manage decentralized identities and secure channels (Audit Trail).",keywords:["how to","integration services sdk","sdk","decentralized identity","maven","java","nodejs","javascript"]},l="Introduction",c={unversionedId:"how_tos/integration-services-sdk/introduction",id:"how_tos/integration-services-sdk/introduction",title:"Introduction",description:"The Integration Services SDK makes it easy to manage decentralized identities and secure channels (Audit Trail).",source:"@site/iota/external/integration-services/production/documentation/docs/how_tos/integration-services-sdk/introduction.mdx",sourceDirName:"how_tos/integration-services-sdk",slug:"/how_tos/integration-services-sdk/introduction",permalink:"/integration-services/how_tos/integration-services-sdk/introduction",draft:!1,editUrl:"https://github.com/iotaledger/integration-services/edit/develop/documentation/iota/external/integration-services/production/documentation/docs/how_tos/integration-services-sdk/introduction.mdx",tags:[],version:"current",frontMatter:{image:"/img/logo/integration_services.png",description:"The Integration Services SDK makes it easy to manage decentralized identities and secure channels (Audit Trail).",keywords:["how to","integration services sdk","sdk","decentralized identity","maven","java","nodejs","javascript"]},sidebar:"docs",previous:{title:"UI Components",permalink:"/integration-services/explanations/services/dashboard/ui-components"},next:{title:"Run How-Tos",permalink:"/integration-services/how_tos/integration-services-sdk/run-how-tos"}},d={},p=[{value:"Install",id:"install",level:2},{value:"Clients",id:"clients",level:2},{value:"IdentityClient",id:"identityclient",level:3}],u={toc:p};function m(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"introduction"},"Introduction"),(0,i.kt)("p",null,"The following sections will guide you in how to use the ",(0,i.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/iota-is-sdk"},"Integration Services SDK"),".\nThe Integration Services SDK makes it easy to manage decentralized identities and secure channels (Audit Trail)."),(0,i.kt)("p",null,"You should have a basic understanding of ",(0,i.kt)("a",{parentName:"p",href:"../../explanations/identity"},"decentralized identities"),"\nto get the most out of the following examples."),(0,i.kt)("h2",{id:"install"},"Install"),(0,i.kt)(r.Z,{groupId:"programmingLanguage",mdxType:"Tabs"},(0,i.kt)(o.Z,{value:"Java",label:"Java",mdxType:"TabItem"},"Build from source:",(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"git clone git@github.com:albydeca/iota-is-sdk.git\ncd iota-is-sdk\nmvn clean install\n")),(0,i.kt)("p",null,"or download JAR from ",(0,i.kt)("a",{parentName:"p",href:"https://mvnrepository.com/artifact/net.gradbase/iota.is.sdk/0.0.1"},"MVNRepository")),(0,i.kt)("p",null,"or simply add to your POM:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml"},"\x3c!-- https://mvnrepository.com/artifact/net.gradbase/iota.is.sdk --\x3e\n<dependency>\n    <groupId>net.gradbase</groupId>\n    <artifactId>iota.is.sdk</artifactId>\n    <version>0.0.1</version>\n</dependency>\n"))),(0,i.kt)(o.Z,{value:"Nodejs",label:"Node.js",mdxType:"TabItem"},"You can install the Integration Services Client using [npm](https://npmjs.com/) or [yarn](https://yarnpkg.com/).",(0,i.kt)(r.Z,{mdxType:"Tabs"},(0,i.kt)(o.Z,{value:"npm",label:"npm",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @iota/is-client\n"))),(0,i.kt)(o.Z,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add @iota/is-client\n")))))),(0,i.kt)("h2",{id:"clients"},"Clients"),(0,i.kt)("p",null,"The Integration Services SDK has two different clients you can use:"),(0,i.kt)("h3",{id:"identityclient"},"IdentityClient"),(0,i.kt)("p",null,"You can use ",(0,i.kt)("inlineCode",{parentName:"p"},"IdentityClient")," to manage decentralized identities. This includes, but is not limited to:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"create-identity-and-credentials"},"Creating an identity and verifiable credentials")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"update-users"},"Updating users")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"delete-users"},"Deleting users")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"trusted-authorities"},"Adding Trusted Authorities"))),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"You can test your implementation on our public API which is connected to the IOTA Mainnet."),(0,i.kt)("ul",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ul"},"URL: ",(0,i.kt)("a",{parentName:"li",href:"https://demo-integration-services.iota.cafe/"},"https://demo-integration-services.iota.cafe/")),(0,i.kt)("li",{parentName:"ul"},"API key: b85e51a2-9981-11ec-8770-4b8f01948e9b\n:::")),(0,i.kt)("h3",{parentName:"admonition",id:"channelclient"},"ChannelClient"),(0,i.kt)("p",{parentName:"admonition"},"You can use the ",(0,i.kt)("inlineCode",{parentName:"p"},"ChannelClient")," to access Audit Trail features. These include, but are not limited to:"),(0,i.kt)("ul",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"create-channel"},"Creating a channel")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"authorize-to-channel#subscribe-to-a-channel"},"Subscribing or approving access to a channel")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"create-channel#write-on-a-channel"},"Reading and Writing on a channel"))),(0,i.kt)(r.Z,{groupId:"programmingLanguage",mdxType:"Tabs"},(0,i.kt)(o.Z,{value:"Java",label:"Java",mdxType:"TabItem"},(0,i.kt)("p",{parentName:"admonition"},"You can import and configure these clients using a ",(0,i.kt)("inlineCode",{parentName:"p"},"env.properties")," object which will populate the ",(0,i.kt)("inlineCode",{parentName:"p"},"BaseClient")," class:"),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-plaintext"}," api-key=XXXXXXX\n api-version=vX.X\n api-url=XXXXXXX\n identity-file=adminIdentity.json\n"))),(0,i.kt)(o.Z,{value:"Nodejs",label:"Node.js",mdxType:"TabItem"},(0,i.kt)("p",{parentName:"admonition"},"You can import and configure these clients using a ",(0,i.kt)("inlineCode",{parentName:"p"},"ClientConfig")," object:"),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-js"},"\nimport { ClientConfig, IdentityClient, ChannelClient } from '@iota/is-client';\n\nconst config: ClientConfig = {\n    isGatewayUrl: process.env.IS_GATEWAY_URL,   // used in production\n    ssiBridgeUrl: process.env.SSI_BRIDGE_URL,   // used in local development\n    auditTrailUrl: process.env.AUDIT_TRAIL_URL, // used in local development\n    useGatewayUrl: process.env.USE_GATEWAY_URL === 'true' || false,\n    apiKey: process.env.API_KEY,                // can be setup in the API to restrict access\n    apiVersionAuditTrail: ApiVersion.v0_1,      // API version of the audit trail\n    apiVersionSsiBridge: ApiVersion.v0_2        // API version of the ssi bridge\n};\n\n...\nconst identityClient = new IdentityClient(config);\n...\n\n...\nconst channelClient = new ChannelClient(config);\n...\n\n\n")))),(0,i.kt)("h2",{parentName:"admonition",id:"authorization"},"Authorization"),(0,i.kt)("p",{parentName:"admonition"},"In order to work with Integration Services API, you will need to be authenticated with a decentralized identity."),(0,i.kt)("p",{parentName:"admonition"},"The Integration Services use a JWT token based authorization mechanism which behaves in the following manner:"),(0,i.kt)("ol",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ol"},"The client gets a nonce from the API and returns it signed by the identity's private key."),(0,i.kt)("li",{parentName:"ol"},"The API returns a JWT token to authorize any subsequent requests.")),(0,i.kt)("p",{parentName:"admonition"},"You can get an identity using the following script (no auth required):"),(0,i.kt)(r.Z,{groupId:"programmingLanguage",mdxType:"Tabs"},(0,i.kt)(o.Z,{value:"Java",label:"Java",mdxType:"TabItem"},(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-java"},'  IdentityClient client = new IdentityClient();\n  JSONObject jsonClaim = new JSONObject().put("type", "Person").put("name", "randomName");\n\n  Claim claim = new Claim(jsonClaim);\n\n  final String randomUsername = Utils.getRandomUsernameOfLength(5);\n  System.out.println("username: " + randomUsername);\n  JSONObject newUserIdentity = client.create(randomUsername, claim);\n  System.out.println("created new user " + newUserIdentity);\n'))),(0,i.kt)(o.Z,{value:"Nodejs",label:"Node.js",mdxType:"TabItem"},(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const identity = await identityClient.create('User');\n")))),(0,i.kt)("p",{parentName:"admonition"},"The generated identity is stored on the IOTA Tangle and follows ",(0,i.kt)("a",{parentName:"p",href:"https://www.w3.org/TR/did-core/"},"did-core specifications"),".\nIt is a JSON file like the following:"),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "id": "did:iota:Dr1kbpAUMtmXV7oNBsqdt2bkFrt72fmvzGNxhgU939ne",\n    "keys": {\n        "sign": {\n            "public": "EWcf94eLQsikKwWeVjKKb5nC38iiTgUz97oSDEzxBvzu",\n            "private": "CBNAydKtSUQ3voeyMHiBngrGsKSSenohRE6CGqzuHGHA",\n            "type": "ed25519",\n            "encoding": "base58"\n        },\n        "encrypt": {\n            "public": "CKfWWbRr8JkfZ3fZAYiDcFqTiHDyRiBGurxAMYkXLX7j",\n            "private": "84fewtiBLvsenyA4LoDBn8WzGZiknXopsYuGWT6GvzPG",\n            "type": "x25519",\n            "encoding": "base58"\n        }\n    }\n}\n')),(0,i.kt)("p",{parentName:"admonition"},"If you have a JSON Identity, you can authorize your client as follows:"),(0,i.kt)(r.Z,{groupId:"programmingLanguage",mdxType:"Tabs"},(0,i.kt)(o.Z,{value:"Java",label:"Java",mdxType:"TabItem"},(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-java"},'  String id = newUserIdentity.getJSONObject("doc").getString("id");\n  String pubKey = newUserIdentity.getJSONObject("key").getString("public");\n  String privKey = newUserIdentity.getJSONObject("key").getString("secret");\n  client.authenticate(id, pubKey, privKey);\n'))),(0,i.kt)(o.Z,{value:"Nodejs",label:"Node.js",mdxType:"TabItem"},(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const identity = // ... did-core json object ...\n  await identityClient.authenticate(identity.id, identity.keys.sign.private);\n"))))))}m.isMDXComponent=!0},18679:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(67294),i=n(86010);const r="tabItem_Ymn6";function o(e){let{children:t,hidden:n,className:o}=e;return a.createElement("div",{role:"tabpanel",className:(0,i.Z)(r,o),hidden:n},t)}},34259:(e,t,n)=>{n.d(t,{Z:()=>m});var a=n(87462),i=n(67294),r=n(86010),o=n(51048),s=n(33609),l=n(1943),c=n(72957);const d="tabList__CuJ",p="tabItem_LNqP";function u(e){var t;const{lazy:n,block:o,defaultValue:u,values:m,groupId:g,className:h}=e,v=i.Children.map(e.children,(e=>{if((0,i.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),k=m??v.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),y=(0,s.l)(k,((e,t)=>e.value===t.value));if(y.length>0)throw new Error(`Docusaurus error: Duplicate values "${y.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const b=null===u?u:u??(null==(t=v.find((e=>e.props.default)))?void 0:t.props.value)??v[0].props.value;if(null!==b&&!k.some((e=>e.value===b)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${b}" but none of its children has the corresponding value. Available values are: ${k.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:f,setTabGroupChoices:N}=(0,l.U)(),[w,T]=(0,i.useState)(b),I=[],{blockElementScrollPositionUntilNextRender:C}=(0,c.o5)();if(null!=g){const e=f[g];null!=e&&e!==w&&k.some((t=>t.value===e))&&T(e)}const j=e=>{const t=e.currentTarget,n=I.indexOf(t),a=k[n].value;a!==w&&(C(t),T(a),null!=g&&N(g,String(a)))},S=e=>{var t;let n=null;switch(e.key){case"ArrowRight":{const t=I.indexOf(e.currentTarget)+1;n=I[t]??I[0];break}case"ArrowLeft":{const t=I.indexOf(e.currentTarget)-1;n=I[t]??I[I.length-1];break}}null==(t=n)||t.focus()};return i.createElement("div",{className:(0,r.Z)("tabs-container",d)},i.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":o},h)},k.map((e=>{let{value:t,label:n,attributes:o}=e;return i.createElement("li",(0,a.Z)({role:"tab",tabIndex:w===t?0:-1,"aria-selected":w===t,key:t,ref:e=>I.push(e),onKeyDown:S,onFocus:j,onClick:j},o,{className:(0,r.Z)("tabs__item",p,null==o?void 0:o.className,{"tabs__item--active":w===t})}),n??t)}))),n?(0,i.cloneElement)(v.filter((e=>e.props.value===w))[0],{className:"margin-top--md"}):i.createElement("div",{className:"margin-top--md"},v.map(((e,t)=>(0,i.cloneElement)(e,{key:t,hidden:e.props.value!==w})))))}function m(e){const t=(0,o.Z)();return i.createElement(u,(0,a.Z)({key:String(t)},e))}}}]);