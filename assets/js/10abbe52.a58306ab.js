"use strict";(self.webpackChunkiota_wiki=self.webpackChunkiota_wiki||[]).push([[29007],{3905:(e,t,r)=>{r.d(t,{Zo:()=>y,kt:()=>b});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var p=a.createContext({}),u=function(e){var t=a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},y=function(e){var t=u(e.components);return a.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},s=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,p=e.parentName,y=o(e,["components","mdxType","originalType","parentName"]),s=u(r),b=n,m=s["".concat(p,".").concat(b)]||s[b]||c[b]||i;return r?a.createElement(m,l(l({ref:t},y),{},{components:r})):a.createElement(m,l({ref:t},y))}));function b(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,l=new Array(i);l[0]=s;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:n,l[1]=o;for(var u=2;u<i;u++)l[u]=r[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}s.displayName="MDXCreateElement"},65889:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>u});var a=r(87462),n=(r(67294),r(3905));const i={},l=void 0,o={unversionedId:"libraries/java/api/PublicKey",id:"libraries/java/api/PublicKey",title:"PublicKey",description:"verify(sig, bytes): boolean",source:"@site/iota/external/iota.rs/production/documentation/docs/libraries/java/api/PublicKey.mdx",sourceDirName:"libraries/java/api",slug:"/libraries/java/api/PublicKey",permalink:"/iota.rs/libraries/java/api/PublicKey",draft:!1,editUrl:"https://github.com/iotaledger/iota.rs/edit/production/documentation/iota/external/iota.rs/production/documentation/docs/libraries/java/api/PublicKey.mdx",tags:[],version:"current",frontMatter:{}},p={},u=[{value:"verify(sig, bytes): boolean",id:"verifysig-bytes-boolean",level:3},{value:"toBytes(): byte[]",id:"tobytes-byte",level:3},{value:"tryFromBytes(bytes): PublicKey",id:"tryfrombytesbytes-publickey",level:3}],y={toc:u};function c(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},y,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h3",{id:"verifysig-bytes-boolean"},"verify(sig, bytes): boolean"),(0,n.kt)("p",null,"Verify the signature and bytes against this public key"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"sig"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"#signature"},"Signature")),(0,n.kt)("td",{parentName:"tr",align:null},"The signature to verify")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"bytes"),(0,n.kt)("td",{parentName:"tr",align:null},"byte[]"),(0,n.kt)("td",{parentName:"tr",align:null},"The bytes to verify")))),(0,n.kt)("h3",{id:"tobytes-byte"},"toBytes(): byte[]"),(0,n.kt)("p",null,"Turns ths public key into bytes"),(0,n.kt)("h3",{id:"tryfrombytesbytes-publickey"},"tryFromBytes(bytes): ",(0,n.kt)("a",{parentName:"h3",href:"#publickey"},"PublicKey")),(0,n.kt)("p",null,"Attempt to create a public key from the provided bytes"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"bytes"),(0,n.kt)("td",{parentName:"tr",align:null},"byte[]"),(0,n.kt)("td",{parentName:"tr",align:null},"The bytes to create the key from")))))}c.isMDXComponent=!0}}]);