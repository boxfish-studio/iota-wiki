"use strict";(self.webpackChunkiota_wiki=self.webpackChunkiota_wiki||[]).push([[2319],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>g});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,m=c(e,["components","mdxType","originalType","parentName"]),h=p(n),g=o,d=h["".concat(l,".").concat(g)]||h[g]||s[g]||a;return n?r.createElement(d,i(i({ref:t},m),{},{components:n})):r.createElement(d,i({ref:t},m))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=h;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},68877:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>s,frontMatter:()=>a,metadata:()=>c,toc:()=>p});var r=n(87462),o=(n(67294),n(3905));const a={description:"Chronicle is the permanode solution for the different IOTA networks.",image:"/img/logo/bee_logo.png",keywords:["Rust","Discord","Permanode","IOTA"]},i="Welcome",c={unversionedId:"welcome",id:"welcome",title:"Welcome",description:"Chronicle is the permanode solution for the different IOTA networks.",source:"@site/shimmer/external/chronicle/documentation/docs/welcome.md",sourceDirName:".",slug:"/welcome",permalink:"/shimmer/chronicle/welcome",draft:!1,editUrl:"https://github.com/iotaledger/inx-chronicle/edit/main/documentation/shimmer/external/chronicle/documentation/docs/welcome.md",tags:[],version:"current",frontMatter:{description:"Chronicle is the permanode solution for the different IOTA networks.",image:"/img/logo/bee_logo.png",keywords:["Rust","Discord","Permanode","IOTA"]},sidebar:"docs",next:{title:"Changelog",permalink:"/shimmer/chronicle/changelog"}},l={},p=[],m={toc:p};function s(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"welcome"},"Welcome"),(0,o.kt)("p",null,(0,o.kt)("h1",{parentName:"p"},"inx-chronicle"),(0,o.kt)("p",{parentName:"p"},(0,o.kt)("a",{parentName:"p",href:"https://github.com/iotaledger/inx-chronicle/actions/workflows/ci.yml"},(0,o.kt)("img",{parentName:"a",src:"https://github.com/iotaledger/inx-chronicle/actions/workflows/ci.yml/badge.svg",alt:"ci"})),"\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/iotaledger/inx-chronicle/actions/workflows/canary.yml"},(0,o.kt)("img",{parentName:"a",src:"https://github.com/iotaledger/inx-chronicle/actions/workflows/canary.yml/badge.svg",alt:"Canary"})),"\n",(0,o.kt)("a",{parentName:"p",href:"https://coveralls.io/github/iotaledger/inx-chronicle?branch=main"},(0,o.kt)("img",{parentName:"a",src:"https://coveralls.io/repos/github/iotaledger/inx-chronicle/badge.svg?branch=main",alt:"Coverage Status"}))),(0,o.kt)("p",{parentName:"p"},"Chronicle is the permanode (sometimes also called indexer or scanner) for the IOTA-based networks.\nIt connects to a ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/iotaledger/hornet"},"Hornet")," via the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/iotaledger/inx"},"IOTA Node Extension (INX)")," interface.\nThrough the INX interface, Chronicle listens to all blocks in the Tangle that are referenced by a milestone and stores them in a ",(0,o.kt)("a",{parentName:"p",href:"https://www.mongodb.com/"},"MongoDB")," database."),(0,o.kt)("h2",{parentName:"p"},"Documentation"),(0,o.kt)("p",{parentName:"p"},"The documentation for Chronicle can be found in ",(0,o.kt)("a",{parentName:"p",href:"https://wiki.iota.org/shimmer/chronicle/welcome"},"our wiki"),", the supported APIs are documented ",(0,o.kt)("a",{parentName:"p",href:"https://wiki.iota.org/shimmer/chronicle/reference/api"},"here"),"."),(0,o.kt)("h2",{parentName:"p"},"Development"),(0,o.kt)("p",{parentName:"p"},"This project uses ",(0,o.kt)("a",{parentName:"p",href:"https://www.conventionalcommits.org/en/v1.0.0/"},"conventional commits")," to automatically generate a ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/iotaledger/inx-chronicle/blob/main/CHANGELOG.md"},(0,o.kt)("inlineCode",{parentName:"a"},"CHANGELOG.md"))," which signals breaking changes.\nThe changelog can be created using the following command (requires the ",(0,o.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/conventional-changelog-cli"},(0,o.kt)("inlineCode",{parentName:"a"},"conventional-changelog-cli"))," package on NPM):"),(0,o.kt)("pre",{parentName:"p"},(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"conventional-changelog -p conventionalcommits -i CHANGELOG.md -s\n"))))}s.isMDXComponent=!0}}]);