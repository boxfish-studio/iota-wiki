"use strict";(self.webpackChunkiota_wiki=self.webpackChunkiota_wiki||[]).push([[50791],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>p});var o=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=o.createContext({}),i=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=i(e.components);return o.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=i(n),p=a,h=d["".concat(l,".").concat(p)]||d[p]||m[p]||r;return n?o.createElement(h,c(c({ref:t},u),{},{components:n})):o.createElement(h,c({ref:t},u))}));function p(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,c=new Array(r);c[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,c[1]=s;for(var i=2;i<r;i++)c[i]=n[i];return o.createElement.apply(null,c)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},990:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>p,frontMatter:()=>s,metadata:()=>i,toc:()=>m});var o=n(87462),a=(n(67294),n(3905)),r=n(34259),c=n(18679);const s={description:"The common account is controlled by the chain owner, and is used to store funds collected by fees, invalid contracts or sent to the L1 chain address.",image:"/img/logo/WASP_logo_dark.png",keywords:["smart contracts","deposit","transfer","chain","Rust","Solo","how to"]},l="The Common Account",i={unversionedId:"guide/core_concepts/accounts/the-common-account",id:"guide/core_concepts/accounts/the-common-account",title:"The Common Account",description:"The common account is controlled by the chain owner, and is used to store funds collected by fees, invalid contracts or sent to the L1 chain address.",source:"@site/shimmer/external/wasp/documentation/docs/guide/core_concepts/accounts/the-common-account.mdx",sourceDirName:"guide/core_concepts/accounts",slug:"/guide/core_concepts/accounts/the-common-account",permalink:"/shimmer/smart-contracts/guide/core_concepts/accounts/the-common-account",draft:!1,editUrl:"https://github.com/iotaledger/wasp/edit/master/documentation/shimmer/external/wasp/documentation/docs/guide/core_concepts/accounts/the-common-account.mdx",tags:[],version:"current",frontMatter:{description:"The common account is controlled by the chain owner, and is used to store funds collected by fees, invalid contracts or sent to the L1 chain address.",image:"/img/logo/WASP_logo_dark.png",keywords:["smart contracts","deposit","transfer","chain","Rust","Solo","how to"]},sidebar:"tutorialSidebar",previous:{title:"View Account Balances",permalink:"/shimmer/smart-contracts/guide/core_concepts/accounts/view-account-balances"},next:{title:"Testing Smart Contracts with Solo",permalink:"/shimmer/smart-contracts/guide/solo/what-is-solo"}},u={},m=[{value:"<code>harvest</code>",id:"harvest",level:2},{value:"Parameters",id:"parameters",level:3}],d={toc:m};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"the-common-account"},"The Common Account"),(0,a.kt)("p",null,"The common account is controlled by the chain owner defined in the chain ",(0,a.kt)("a",{parentName:"p",href:"/shimmer/smart-contracts/guide/core_concepts/core_contracts/root"},"root contract"),"."),(0,a.kt)("p",null,"This account is used to store funds collected by fees, or sent to the chain's L1 address, or to invalid contracts (this\nway the funds are not permanently lost)."),(0,a.kt)("h2",{id:"harvest"},(0,a.kt)("inlineCode",{parentName:"h2"},"harvest")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"harvest")," entry point allows the chain owner to move all funds available in the common account to their own L2\naccount."),(0,a.kt)("h3",{id:"parameters"},"Parameters"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"ParamForceMinimumBaseTokens"),": The amount of base tokens to leave in the common account (default: 3000).")),(0,a.kt)(r.Z,{defaultValue:"solo",values:[{label:"Solo",value:"solo"},{label:"Solo (Schema)",value:"soloctx"},{label:"Rust (Schema)",value:"rust"},{label:"Go (Schema)",value:"go"}],mdxType:"Tabs"},(0,a.kt)(c.Z,{value:"solo",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},"req := solo.NewCallParams(accounts.Contract.Name, accounts.FuncHarvest.Name)\n_, err := chain.PostRequestSync(req.WithMaxAffordableGasBudget(), wallet)\nrequire.NoError(t, err)\n"))),(0,a.kt)(c.Z,{value:"soloctx",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},"w := coreaccounts.ScFuncs.Harvest(ctx.Sign(wallet))\nw.Func.TransferBaseTokens(1).PostToChain(chainID)\nrequire.NoError(t, ctx.Err)\n"))),(0,a.kt)(c.Z,{value:"rust",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},"let h = coreaccounts::ScFuncs::harvest(ctx);\nh.func.transfer_base_tokens(1).post_to_chain(chainID);\n"))),(0,a.kt)(c.Z,{value:"go",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},"w := coreaccounts.ScFuncs.Harvest(ctx)\nw.Func.TransferBaseTokens(1).PostToChain(chainID)\n")))))}p.isMDXComponent=!0},18679:(e,t,n)=>{n.d(t,{Z:()=>c});var o=n(67294),a=n(86010);const r="tabItem_Ymn6";function c(e){let{children:t,hidden:n,className:c}=e;return o.createElement("div",{role:"tabpanel",className:(0,a.Z)(r,c),hidden:n},t)}},34259:(e,t,n)=>{n.d(t,{Z:()=>p});var o=n(87462),a=n(67294),r=n(86010),c=n(51048),s=n(33609),l=n(1943),i=n(72957);const u="tabList__CuJ",m="tabItem_LNqP";function d(e){var t;const{lazy:n,block:c,defaultValue:d,values:p,groupId:h,className:f}=e,v=a.Children.map(e.children,(e=>{if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),b=p??v.map((e=>{let{props:{value:t,label:n,attributes:o}}=e;return{value:t,label:n,attributes:o}})),g=(0,s.l)(b,((e,t)=>e.value===t.value));if(g.length>0)throw new Error(`Docusaurus error: Duplicate values "${g.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const y=null===d?d:d??(null==(t=v.find((e=>e.props.default)))?void 0:t.props.value)??v[0].props.value;if(null!==y&&!b.some((e=>e.value===y)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${y}" but none of its children has the corresponding value. Available values are: ${b.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:k,setTabGroupChoices:w}=(0,l.U)(),[T,N]=(0,a.useState)(y),x=[],{blockElementScrollPositionUntilNextRender:O}=(0,i.o5)();if(null!=h){const e=k[h];null!=e&&e!==T&&b.some((t=>t.value===e))&&N(e)}const _=e=>{const t=e.currentTarget,n=x.indexOf(t),o=b[n].value;o!==T&&(O(t),N(o),null!=h&&w(h,String(o)))},E=e=>{var t;let n=null;switch(e.key){case"ArrowRight":{const t=x.indexOf(e.currentTarget)+1;n=x[t]??x[0];break}case"ArrowLeft":{const t=x.indexOf(e.currentTarget)-1;n=x[t]??x[x.length-1];break}}null==(t=n)||t.focus()};return a.createElement("div",{className:(0,r.Z)("tabs-container",u)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":c},f)},b.map((e=>{let{value:t,label:n,attributes:c}=e;return a.createElement("li",(0,o.Z)({role:"tab",tabIndex:T===t?0:-1,"aria-selected":T===t,key:t,ref:e=>x.push(e),onKeyDown:E,onFocus:_,onClick:_},c,{className:(0,r.Z)("tabs__item",m,null==c?void 0:c.className,{"tabs__item--active":T===t})}),n??t)}))),n?(0,a.cloneElement)(v.filter((e=>e.props.value===T))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},v.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==T})))))}function p(e){const t=(0,c.Z)();return a.createElement(d,(0,o.Z)({key:String(t)},e))}}}]);