"use strict";(self.webpackChunkiota_wiki=self.webpackChunkiota_wiki||[]).push([[63286],{76336:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>d,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var n=a(87462),i=(a(67294),a(3905)),o=a(69319);const r={description:"Learn how to send and retrieve data using the iota.js client library.",image:"/img/client_banner.png",keywords:["how to","example","send data","retrieve data","bytes","utf8","base64","binary"]},d="Send and Retrieve Data",s={unversionedId:"how_tos/data",id:"how_tos/data",title:"Send and Retrieve Data",description:"Learn how to send and retrieve data using the iota.js client library.",source:"@site/shimmer/external/iota.js/documentation/docs/how_tos/data.mdx",sourceDirName:"how_tos",slug:"/how_tos/data",permalink:"/shimmer/iotajs/how_tos/data",draft:!1,editUrl:"https://github.com/iotaledger/iota.js/tree/dev/packages/iota/documentation/shimmer/external/iota.js/documentation/docs/how_tos/data.mdx",tags:[],version:"current",frontMatter:{description:"Learn how to send and retrieve data using the iota.js client library.",image:"/img/client_banner.png",keywords:["how to","example","send data","retrieve data","bytes","utf8","base64","binary"]},sidebar:"docs",previous:{title:"Manage Peers",permalink:"/shimmer/iotajs/how_tos/peers"},next:{title:"Send a Transaction",permalink:"/shimmer/iotajs/how_tos/transaction"}},l={},c=[{value:"Example Code",id:"example-code",level:2},{value:"Pre-requirements",id:"pre-requirements",level:2},{value:"Convert Data to Bytes",id:"convert-data-to-bytes",level:3},{value:"Send Data",id:"send-data",level:2},{value:"Retrieve Data",id:"retrieve-data",level:2},{value:"Example Code",id:"example-code-1",level:2},{value:"Expected Output",id:"expected-output",level:3}],u={toc:c};function p(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"send-and-retrieve-data"},"Send and Retrieve Data"),(0,i.kt)("h2",{id:"example-code"},"Example Code"),(0,i.kt)("h2",{id:"pre-requirements"},"Pre-requirements"),(0,i.kt)("p",null,"Before you can send data, you will need to:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/shimmer/iotajs/how_tos/simple"},"Connect to a Node"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#convert-data-to-bytes"},"Convert data to bytes"),".")),(0,i.kt)("h3",{id:"convert-data-to-bytes"},"Convert Data to Bytes"),(0,i.kt)("p",null,"You can convert data to bytes by using the following functions from the ",(0,i.kt)("a",{parentName:"p",href:"/shimmer/iotajs/references/util/classes/Converter"},"Converter"),"\nclass:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../references/util/classes/Converter#utf8tobytes"},"Converter.utf8ToBytes(utf8)"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../references/util/classes/Converter#binarytobytes"},"Converter.utf8ToBytes(binary)"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../references/util/classes/Converter#base64tobytes"},"Converter.base64ToBytes(base64)"),".")),(0,i.kt)("h2",{id:"send-data"},"Send Data"),(0,i.kt)("p",null,"You can use the ",(0,i.kt)("a",{parentName:"p",href:"../references/client/api_ref#senddata"},"sendData(client, tag?, data?)")," function to send data to a\n",(0,i.kt)("a",{parentName:"p",href:"/shimmer/iotajs/references/client/classes/SingleNodeClient"},"SingleNodeClient"),". You will need to provide a ",(0,i.kt)("inlineCode",{parentName:"p"},"SingleNodeClient"),",\nand optionally a ",(0,i.kt)("inlineCode",{parentName:"p"},"tag")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"data")," as bytes."),(0,i.kt)("h2",{id:"retrieve-data"},"Retrieve Data"),(0,i.kt)("p",null,"You can use the ",(0,i.kt)("a",{parentName:"p",href:"../references/client/api_ref#retrievedata"},"retrieveData(client, blockId)")," function to retrieve data\nfrom a ",(0,i.kt)("a",{parentName:"p",href:"/shimmer/iotajs/references/client/classes/SingleNodeClient"},"SingleNodeClient"),".  You will need to provide a\n",(0,i.kt)("inlineCode",{parentName:"p"},"SingleNodeClient")," and a ",(0,i.kt)("inlineCode",{parentName:"p"},"blockId"),". If successful, the function will return an object with the block's data."),(0,i.kt)("h2",{id:"example-code-1"},"Example Code"),(0,i.kt)(o.Z,{className:"language-javascript",mdxType:"CodeBlock"},'import { retrieveData, sendData, SingleNodeClient } from "@iota/iota.js";\nimport { Converter } from "@iota/util.js";\nimport { NeonPowProvider } from "@iota/pow-neon.js";\n\nconst API_ENDPOINT = "https://api.alphanet.iotaledger.net/";\n// If running the node locally\n// const API_ENDPOINT = "http://localhost:14265/";\n\nasync function run() {\n    // Neon localPoW is blazingly fast, but you need rust toolchain to build\n    const client = new SingleNodeClient(API_ENDPOINT, {powProvider: new NeonPowProvider()});\n\n    const myTag = Converter.utf8ToBytes("MY-DATA-TAG");\n\n    const blockIds = [];\n\n    for (let i = 0; i < 10; i++) {\n        console.log("Sending Data");\n        const sendResult = await sendData(client, myTag, Converter.utf8ToBytes(`This is data ${i} \ud83d\ude80`));\n        console.log("Received Block Id", sendResult.blockId);\n        blockIds.push(sendResult.blockId);\n    }\n\n    console.log();\n\n    for (let i = 0; i < blockIds.length; i++) {\n        console.log("Retrieving Data");\n\n        const firstResult = await retrieveData(client, blockIds[i]);\n        if (firstResult) {\n            console.log("Block");\n            console.log("\\tTag: ", firstResult.tag ? Converter.bytesToUtf8(firstResult.tag) : "None");\n            console.log("\\tData: ", firstResult.data ? Converter.bytesToUtf8(firstResult.data) : "None");\n        }\n    }\n}\n\nrun()\n    .then(() => console.log("Done"))\n    .catch(err => console.error(err));\n'),(0,i.kt)("h3",{id:"expected-output"},"Expected Output"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-plaintext"},"Sending Data\nReceived Block Id 0x655e3b59943252851f0d7c67cbc93a733e0950a08aa3291aac8e34e6f79334be\nSending Data\nReceived Block Id 0xea3d6be441d78d89782d45edc0466b26e8a5e8423851d60ce38fe97754b9406f\nSending Data\nReceived Block Id 0xa1691c3113cdf0e143034cf34c2a172c02c1b172a8f187203e4d177ee94fa1a5\nSending Data\nReceived Block Id 0x708c4f1169269a78650ed592ef7268b7a16134240d4360ad177dbd82a2137a4f\nSending Data\nReceived Block Id 0x50f8804354485dc2b340d5da72cd3cf8df67e99ec0bac2d3b978b3f6d9c74be3\nSending Data\nReceived Block Id 0x016ac0a64278b57e7bcb937b7c4ecd0f2869ab4ab25e46a4f9be34f65c215461\nSending Data\nReceived Block Id 0x1c119d34aef307c3c90a5d8250bfebb7ab65ec5ca90533c0e38056d22f724e99\nSending Data\nReceived Block Id 0xdecec0535c4b71554ad34e369bba6e2bf9a1591c779b008f0be7c8b47ea8f072\nSending Data\nReceived Block Id 0x6072def2453c5ac99c54a450854eb3962e6c3a6eb8eb80863cff17f10b426034\nSending Data\nReceived Block Id 0xdbc9ee326b86ce2dabd262a1054afde98ac0928b8665ae431efde3802783f487\n\nRetrieving Data\nBlock\n        Tag:  MY-DATA-TAG\n        Data:  This is data 0 \ud83d\ude80\nRetrieving Data\nBlock\n        Tag:  MY-DATA-TAG\n        Data:  This is data 1 \ud83d\ude80\nRetrieving Data\nBlock\n        Tag:  MY-DATA-TAG\n        Data:  This is data 2 \ud83d\ude80\nRetrieving Data\nBlock\n        Tag:  MY-DATA-TAG\n        Data:  This is data 3 \ud83d\ude80\nRetrieving Data\nBlock\n        Tag:  MY-DATA-TAG\n        Data:  This is data 4 \ud83d\ude80\nRetrieving Data\nBlock\n        Tag:  MY-DATA-TAG\n        Data:  This is data 5 \ud83d\ude80\nRetrieving Data\nBlock\n        Tag:  MY-DATA-TAG\n        Data:  This is data 6 \ud83d\ude80\nRetrieving Data\nBlock\n        Tag:  MY-DATA-TAG\n        Data:  This is data 7 \ud83d\ude80\nRetrieving Data\nBlock\n        Tag:  MY-DATA-TAG\n        Data:  This is data 8 \ud83d\ude80\nRetrieving Data\nBlock\n        Tag:  MY-DATA-TAG\n        Data:  This is data 9 \ud83d\ude80\nDone\n\n")))}p.isMDXComponent=!0}}]);