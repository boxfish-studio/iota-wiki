"use strict";(self.webpackChunkiota_wiki=self.webpackChunkiota_wiki||[]).push([[97119],{3905:(e,r,t)=>{t.d(r,{Zo:()=>d,kt:()=>m});var n=t(67294);function s(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){s(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,s=function(e,r){if(null==e)return{};var t,n,s={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(s[t]=e[t]);return s}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var l=n.createContext({}),c=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},d=function(e){var r=c(e.components);return n.createElement(l.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},u=n.forwardRef((function(e,r){var t=e.components,s=e.mdxType,a=e.originalType,l=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),u=c(t),m=s,f=u["".concat(l,".").concat(m)]||u[m]||p[m]||a;return t?n.createElement(f,o(o({ref:r},d),{},{components:t})):n.createElement(f,o({ref:r},d))}));function m(e,r){var t=arguments,s=r&&r.mdxType;if("string"==typeof e||s){var a=t.length,o=new Array(a);o[0]=u;var i={};for(var l in r)hasOwnProperty.call(r,l)&&(i[l]=r[l]);i.originalType=e,i.mdxType="string"==typeof e?e:s,o[1]=i;for(var c=2;c<a;c++)o[c]=t[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},5090:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var n=t(87462),s=(t(67294),t(3905));const a={},o="Class: MessageHandler",i={unversionedId:"libraries/nodejs/references/classes/MessageHandler",id:"libraries/nodejs/references/classes/MessageHandler",title:"Class: MessageHandler",description:"The MessageHandler which sends the commands to the Rust side.",source:"@site/shimmer/external/iota.rs/documentation/docs/libraries/nodejs/references/classes/MessageHandler.md",sourceDirName:"libraries/nodejs/references/classes",slug:"/libraries/nodejs/references/classes/MessageHandler",permalink:"/shimmer/iota.rs/libraries/nodejs/references/classes/MessageHandler",draft:!1,editUrl:"https://github.com/iotaledger/iota.rs/edit/develop/documentation/shimmer/external/iota.rs/documentation/docs/libraries/nodejs/references/classes/MessageHandler.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Class: Client",permalink:"/shimmer/iota.rs/libraries/nodejs/references/classes/Client"},next:{title:"Enumeration: CoinType",permalink:"/shimmer/iota.rs/libraries/nodejs/references/enums/CoinType"}},l={},c=[],d={toc:c};function p(e){let{components:r,...t}=e;return(0,s.kt)("wrapper",(0,n.Z)({},d,t,{components:r,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"class-messagehandler"},"Class: MessageHandler"),(0,s.kt)("p",null,"The MessageHandler which sends the commands to the Rust side."))}p.isMDXComponent=!0}}]);