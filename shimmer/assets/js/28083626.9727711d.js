"use strict";(self.webpackChunkiota_wiki=self.webpackChunkiota_wiki||[]).push([[87976],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>u});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),d=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},l=function(e){var t=d(e.components);return n.createElement(c.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),p=d(r),u=a,m=p["".concat(c,".").concat(u)]||p[u]||f[u]||o;return r?n.createElement(m,s(s({ref:t},l),{},{components:r})):n.createElement(m,s({ref:t},l))}));function u(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,s=new Array(o);s[0]=p;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var d=2;d<o;d++)s[d]=r[d];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},58994:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>f,frontMatter:()=>o,metadata:()=>i,toc:()=>d});var n=r(87462),a=(r(67294),r(3905));const o={},s="Interface: GenerateAddressMetadata",i={unversionedId:"references/nodejs/interfaces/GenerateAddressMetadata",id:"references/nodejs/interfaces/GenerateAddressMetadata",title:"Interface: GenerateAddressMetadata",description:"Metadata for address generation, useful with a Ledger Nano SecretManager",source:"@site/shimmer/external/wallet.rs/documentation/docs/references/nodejs/interfaces/GenerateAddressMetadata.md",sourceDirName:"references/nodejs/interfaces",slug:"/references/nodejs/interfaces/GenerateAddressMetadata",permalink:"/shimmer/wallet.rs/references/nodejs/interfaces/GenerateAddressMetadata",draft:!1,editUrl:"https://github.com/iotaledger/wallet.rs/edit/develop/documentation/shimmer/external/wallet.rs/documentation/docs/references/nodejs/interfaces/GenerateAddressMetadata.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Interface: FilterOptions",permalink:"/shimmer/wallet.rs/references/nodejs/interfaces/FilterOptions"},next:{title:"Interface: IncreaseNativeTokenSupplyOptions",permalink:"/shimmer/wallet.rs/references/nodejs/interfaces/IncreaseNativeTokenSupplyOptions"}},c={},d=[],l={toc:d};function f(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"interface-generateaddressmetadata"},"Interface: GenerateAddressMetadata"),(0,a.kt)("p",null,"Metadata for address generation, useful with a Ledger Nano SecretManager"))}f.isMDXComponent=!0}}]);