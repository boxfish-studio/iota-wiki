"use strict";(self.webpackChunkiota_wiki=self.webpackChunkiota_wiki||[]).push([[19765],{3905:(e,r,t)=>{t.d(r,{Zo:()=>m,kt:()=>c});var n=t(67294);function i(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function a(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){i(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,n,i=function(e,r){if(null==e)return{};var t,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(i[t]=e[t]);return i}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=n.createContext({}),p=function(e){var r=n.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):a(a({},r),e)),t},m=function(e){var r=p(e.components);return n.createElement(s.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},d=n.forwardRef((function(e,r){var t=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),d=p(t),c=i,k=d["".concat(s,".").concat(c)]||d[c]||u[c]||o;return t?n.createElement(k,a(a({ref:r},m),{},{components:t})):n.createElement(k,a({ref:r},m))}));function c(e,r){var t=arguments,i=r&&r.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=d;var l={};for(var s in r)hasOwnProperty.call(r,s)&&(l[s]=r[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var p=2;p<o;p++)a[p]=t[p];return n.createElement.apply(null,a)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},26581:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>s,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var n=t(87462),i=(t(67294),t(3905));const o={},a="Interface: IClientOptions",l={unversionedId:"libraries/nodejs/references/interfaces/IClientOptions",id:"libraries/nodejs/references/interfaces/IClientOptions",title:"Interface: IClientOptions",description:"Options for the client builder",source:"@site/shimmer/external/iota.rs/documentation/docs/libraries/nodejs/references/interfaces/IClientOptions.md",sourceDirName:"libraries/nodejs/references/interfaces",slug:"/libraries/nodejs/references/interfaces/IClientOptions",permalink:"/shimmer/iota.rs/libraries/nodejs/references/interfaces/IClientOptions",draft:!1,editUrl:"https://github.com/iotaledger/iota.rs/edit/develop/documentation/shimmer/external/iota.rs/documentation/docs/libraries/nodejs/references/interfaces/IClientOptions.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Interface: IClientBlockBuilderOutputAddress",permalink:"/shimmer/iota.rs/libraries/nodejs/references/interfaces/IClientBlockBuilderOutputAddress"},next:{title:"Interface: IDuration",permalink:"/shimmer/iota.rs/libraries/nodejs/references/interfaces/IDuration"}},s={},p=[{value:"Table of contents",id:"table-of-contents",level:2},{value:"Properties",id:"properties",level:3},{value:"Properties",id:"properties-1",level:2},{value:"primaryNode",id:"primarynode",level:3},{value:"primaryPowNode",id:"primarypownode",level:3},{value:"ignoreNodeHealth",id:"ignorenodehealth",level:3},{value:"nodeSyncInterval",id:"nodesyncinterval",level:3},{value:"quorum",id:"quorum",level:3},{value:"minQuorumSize",id:"minquorumsize",level:3},{value:"quorumThreshold",id:"quorumthreshold",level:3},{value:"networkInfo",id:"networkinfo",level:3},{value:"brokerOptions",id:"brokeroptions",level:3},{value:"apiTimeout",id:"apitimeout",level:3},{value:"remotePowTimeout",id:"remotepowtimeout",level:3},{value:"powWorkerCount",id:"powworkercount",level:3},{value:"localPow",id:"localpow",level:3}],m={toc:p};function u(e){let{components:r,...t}=e;return(0,i.kt)("wrapper",(0,n.Z)({},m,t,{components:r,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"interface-iclientoptions"},"Interface: IClientOptions"),(0,i.kt)("p",null,"Options for the client builder"),(0,i.kt)("h2",{id:"table-of-contents"},"Table of contents"),(0,i.kt)("h3",{id:"properties"},"Properties"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/shimmer/iota.rs/libraries/nodejs/references/interfaces/IClientOptions#primarynode"},"primaryNode")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/shimmer/iota.rs/libraries/nodejs/references/interfaces/IClientOptions#primarypownode"},"primaryPowNode")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/shimmer/iota.rs/libraries/nodejs/references/interfaces/IClientOptions#ignorenodehealth"},"ignoreNodeHealth")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/shimmer/iota.rs/libraries/nodejs/references/interfaces/IClientOptions#nodesyncinterval"},"nodeSyncInterval")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/shimmer/iota.rs/libraries/nodejs/references/interfaces/IClientOptions#quorum"},"quorum")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/shimmer/iota.rs/libraries/nodejs/references/interfaces/IClientOptions#minquorumsize"},"minQuorumSize")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/shimmer/iota.rs/libraries/nodejs/references/interfaces/IClientOptions#quorumthreshold"},"quorumThreshold")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/shimmer/iota.rs/libraries/nodejs/references/interfaces/IClientOptions#networkinfo"},"networkInfo")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/shimmer/iota.rs/libraries/nodejs/references/interfaces/IClientOptions#brokeroptions"},"brokerOptions")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/shimmer/iota.rs/libraries/nodejs/references/interfaces/IClientOptions#apitimeout"},"apiTimeout")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/shimmer/iota.rs/libraries/nodejs/references/interfaces/IClientOptions#remotepowtimeout"},"remotePowTimeout")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/shimmer/iota.rs/libraries/nodejs/references/interfaces/IClientOptions#powworkercount"},"powWorkerCount")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/shimmer/iota.rs/libraries/nodejs/references/interfaces/IClientOptions#localpow"},"localPow"))),(0,i.kt)("h2",{id:"properties-1"},"Properties"),(0,i.kt)("h3",{id:"primarynode"},"primaryNode"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"primaryNode"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"string")," ","|"," ",(0,i.kt)("a",{parentName:"p",href:"/shimmer/iota.rs/libraries/nodejs/references/interfaces/INode"},(0,i.kt)("inlineCode",{parentName:"a"},"INode"))),(0,i.kt)("p",null,"Node which will be tried first for all requests"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"primarypownode"},"primaryPowNode"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"primaryPowNode"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"string")," ","|"," ",(0,i.kt)("a",{parentName:"p",href:"/shimmer/iota.rs/libraries/nodejs/references/interfaces/INode"},(0,i.kt)("inlineCode",{parentName:"a"},"INode"))),(0,i.kt)("p",null,"Node which will be tried first when using remote PoW, even before the primary_node"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"ignorenodehealth"},"ignoreNodeHealth"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"ignoreNodeHealth"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"If the node health status should be ignored"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"nodesyncinterval"},"nodeSyncInterval"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"nodeSyncInterval"),": ",(0,i.kt)("a",{parentName:"p",href:"/shimmer/iota.rs/libraries/nodejs/references/interfaces/IDuration"},(0,i.kt)("inlineCode",{parentName:"a"},"IDuration"))),(0,i.kt)("p",null,"Interval in which nodes will be checked for their sync status and the NetworkInfo gets updated"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"quorum"},"quorum"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"quorum"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"If node quorum is enabled. Will compare the responses from multiple nodes and only returns the\nresponse if quorum_threshold of the nodes return the same one"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"minquorumsize"},"minQuorumSize"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"minQuorumSize"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"Minimum amount of nodes required for request when quorum is enabled"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"quorumthreshold"},"quorumThreshold"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"quorumThreshold"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"% of nodes that have to return the same response so it gets accepted"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"networkinfo"},"networkInfo"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"networkInfo"),": ",(0,i.kt)("a",{parentName:"p",href:"/shimmer/iota.rs/libraries/nodejs/references/interfaces/INetworkInfo"},(0,i.kt)("inlineCode",{parentName:"a"},"INetworkInfo"))),(0,i.kt)("p",null,"Data related to the used network"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"brokeroptions"},"brokerOptions"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"brokerOptions"),": ",(0,i.kt)("a",{parentName:"p",href:"/shimmer/iota.rs/libraries/nodejs/references/interfaces/IMqttBrokerOptions"},(0,i.kt)("inlineCode",{parentName:"a"},"IMqttBrokerOptions"))),(0,i.kt)("p",null,"Options for the MQTT broker"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"apitimeout"},"apiTimeout"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"apiTimeout"),": ",(0,i.kt)("a",{parentName:"p",href:"/shimmer/iota.rs/libraries/nodejs/references/interfaces/IDuration"},(0,i.kt)("inlineCode",{parentName:"a"},"IDuration"))),(0,i.kt)("p",null,"Timeout for API requests"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"remotepowtimeout"},"remotePowTimeout"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"remotePowTimeout"),": ",(0,i.kt)("a",{parentName:"p",href:"/shimmer/iota.rs/libraries/nodejs/references/interfaces/IDuration"},(0,i.kt)("inlineCode",{parentName:"a"},"IDuration"))),(0,i.kt)("p",null,"Timeout when sending a block that requires remote proof of work"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"powworkercount"},"powWorkerCount"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"powWorkerCount"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"The amount of threads to be used for proof of work"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"localpow"},"localPow"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"localPow"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Whether the PoW should be done locally or remotely."))}u.isMDXComponent=!0}}]);